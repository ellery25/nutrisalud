Subject: [PATCH] Is Nutricionist check
---
Index: lib/Providers/Preferences/IsNutricionist.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/Providers/Preferences/IsNutricionist.dart b/lib/Providers/Preferences/IsNutricionist.dart
new file mode 100644
--- /dev/null	(revision d38b3354ef0aa72a98cad2a42ced7d39f84752db)
+++ b/lib/Providers/Preferences/IsNutricionist.dart	(revision d38b3354ef0aa72a98cad2a42ced7d39f84752db)
@@ -0,0 +1,27 @@
+import 'package:shared_preferences/shared_preferences.dart';
+
+class isNutricionist {
+
+  late SharedPreferences _prefs;
+
+  isNutricionist._(this._prefs);
+
+  static Future<isNutricionist> getInstance() async {
+    SharedPreferences prefs = await SharedPreferences.getInstance();
+    return isNutricionist._(prefs);
+  }
+
+  Future<void> saveIsNutricionist(String key, bool value) async {
+    await _prefs.setBool(key, value);
+  }
+
+  bool getIsNutricionist(String key, {bool defaultValue = false}) {
+    return _prefs.getBool(key) ?? defaultValue;
+  }
+
+  Future<void> setIsNutricionist(String key, bool newValue) async {
+    await _prefs.setBool(key, newValue);
+  }
+
+
+}
\ No newline at end of file
Index: lib/Screens/Community.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/Screens/Community.dart b/lib/Screens/Community.dart
--- a/lib/Screens/Community.dart	(revision ac9a8f77977ddd52e5e9c6c6c1e1f1a7b620cf65)
+++ b/lib/Screens/Community.dart	(revision d38b3354ef0aa72a98cad2a42ced7d39f84752db)
@@ -6,6 +6,7 @@
 import '../Widgets/GeneralWidgets/NavBar.dart';
 import '../Providers/CommentsProviders.dart';
 import '../Helpers/HelpersExport.dart';
+import '../Providers/Preferences/IsNutricionist.dart';
 
 class Community extends StatefulWidget {
   const Community({super.key});
@@ -18,12 +19,16 @@
   List<Widget> comunityPostsList = [];
   bool isLoading = true;
 
+
   @override
-  void initState() {
+  void initState() async {
     super.initState();
     llenarCommunityPostsList();
     // Prueba de la lista de usuarios
     print("Se ejecuta Llenar comunity posts");
+    isNutricionist userIsANutricionist = await isNutricionist.getInstance();
+    bool userIs = userIsANutricionist.getIsNutricionist('isNutricionist?');
+    print(userIs);
   }
 
   Future<void> llenarCommunityPostsList() async {
Index: lib/Screens/Login.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/Screens/Login.dart b/lib/Screens/Login.dart
--- a/lib/Screens/Login.dart	(revision ac9a8f77977ddd52e5e9c6c6c1e1f1a7b620cf65)
+++ b/lib/Screens/Login.dart	(revision d38b3354ef0aa72a98cad2a42ced7d39f84752db)
@@ -7,6 +7,7 @@
 import 'package:flutter_svg/flutter_svg.dart';
 import '../Providers/UsersProviders.dart';
 import '../Providers/Preferences/UsuarioPreferences.dart';
+import '../Providers/Preferences/IsNutricionist.dart';
 
 class Login extends StatefulWidget {
   const Login({Key? key}) : super(key: key);
@@ -32,6 +33,7 @@
     bool usuarioEncontrado = false;
 
     UserPersistence userPersistence = await UserPersistence.getInstance();
+    isNutricionist isNutricionistCheck = await isNutricionist.getInstance();
 
     // Recorrer el JSON para buscar coincidencias
     for (var usuario in usuarios) {
@@ -45,6 +47,10 @@
         break;
       }
     }
+
+    //is Nutricionist?
+    await isNutricionistCheck.saveIsNutricionist('isNutricionist?', false);
+
     return usuarioEncontrado;
   }
 
Index: lib/Screens/MainPage.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/Screens/MainPage.dart b/lib/Screens/MainPage.dart
--- a/lib/Screens/MainPage.dart	(revision ac9a8f77977ddd52e5e9c6c6c1e1f1a7b620cf65)
+++ b/lib/Screens/MainPage.dart	(revision d38b3354ef0aa72a98cad2a42ced7d39f84752db)
@@ -5,6 +5,7 @@
 import '../Widgets/MainPageWidgets/MainPageBlocks.dart';
 import '../Helpers/HelpersExport.dart';
 import '../Providers/Preferences/UsuarioPreferences.dart';
+import '../Providers/Preferences/IsNutricionist.dart';
 
 class MainPage extends StatefulWidget {
   const MainPage({super.key});
@@ -14,6 +15,16 @@
 }
 
 class _MainPageState extends State<MainPage> {
+
+  @override
+  void initState() async {
+    // TODO: implement initState
+    super.initState();
+    isNutricionist userIsANutricionist = await isNutricionist.getInstance();
+    bool userIs = userIsANutricionist.getIsNutricionist('isNutricionist?');
+    print(userIs);
+  }
+
   @override
   Widget build(BuildContext context) {
     List<Widget> professionalTipsList = [
Index: lib/Screens/RecomendedFood.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/Screens/RecomendedFood.dart b/lib/Screens/RecomendedFood.dart
--- a/lib/Screens/RecomendedFood.dart	(revision ac9a8f77977ddd52e5e9c6c6c1e1f1a7b620cf65)
+++ b/lib/Screens/RecomendedFood.dart	(revision d38b3354ef0aa72a98cad2a42ced7d39f84752db)
@@ -3,12 +3,30 @@
 import 'package:flutter/material.dart';
 import 'package:nutrisalud/Widgets/RecommendedFoodWidgets/FoodRecomendation.dart';
 import '../Helpers/HelpersExport.dart';
+import '../Providers/Preferences/IsNutricionist.dart';
+
+class RecommendedFood extends StatefulWidget {
+  const RecommendedFood({super.key});
 
-class RecomendedFood extends StatelessWidget {
-  const RecomendedFood({super.key});
+  @override
+  State<RecommendedFood> createState() => _RecommendedFoodState();
+}
+
+class _RecommendedFoodState extends State<RecommendedFood> {
+
+  @override
+  void initState() async {
+    // TODO: implement initState
+    super.initState();
+    isNutricionist userIsANutricionist = await isNutricionist.getInstance();
+    bool userIs = userIsANutricionist.getIsNutricionist('isNutricionist?');
+    print(userIs);
+  }
+
   @override
   Widget build(BuildContext context) {
-    double screenWidth = MediaQuery.of(context).size.width;
+
+    var screenWidth = MediaQuery.of(context).size.width;
 
     return Scaffold(
       backgroundColor: ColorsConstants.whiteColor,
@@ -33,27 +51,27 @@
                           titulo: "Banana",
                           timeToEat: "Morning",
                           descripcion:
-                              "High in potassium and magnesium, bananas can help your body recover from a night of rest and kickstart your day."),
+                          "High in potassium and magnesium, bananas can help your body recover from a night of rest and kickstart your day."),
                       FoodRecomendation(
                           titulo: "Oatmeal",
                           timeToEat: "Breakfast",
                           descripcion:
-                              "Rich in fiber and complex carbohydrates, oatmeal provides sustained energy throughout the morning and helps maintain healthy cholesterol levels."),
+                          "Rich in fiber and complex carbohydrates, oatmeal provides sustained energy throughout the morning and helps maintain healthy cholesterol levels."),
                       FoodRecomendation(
                           titulo: "Salmon",
                           timeToEat: "Lunch",
                           descripcion:
-                              "Packed with omega-3 fatty acids, salmon supports heart health and brain function. It's also a great source of protein for muscle repair and growth."),
+                          "Packed with omega-3 fatty acids, salmon supports heart health and brain function. It's also a great source of protein for muscle repair and growth."),
                       FoodRecomendation(
                           titulo: "Spinach",
                           timeToEat: "Dinner",
                           descripcion:
-                              "Loaded with vitamins A, C, and K, as well as iron and calcium, spinach promotes strong bones and a robust immune system. It's a versatile ingredient that can be incorporated into salads, pastas, and stir-fries."),
+                          "Loaded with vitamins A, C, and K, as well as iron and calcium, spinach promotes strong bones and a robust immune system. It's a versatile ingredient that can be incorporated into salads, pastas, and stir-fries."),
                       FoodRecomendation(
                           titulo: "Greek Yogurt",
                           timeToEat: "Snack",
                           descripcion:
-                              "High in protein and probiotics, Greek yogurt supports gut health and helps you feel full and satisfied between meals. It's a nutritious snack option that can be paired with fruit, nuts, or honey for added flavor.")
+                          "High in protein and probiotics, Greek yogurt supports gut health and helps you feel full and satisfied between meals. It's a nutritious snack option that can be paired with fruit, nuts, or honey for added flavor.")
                     ],
                   ),
                 ),
@@ -65,3 +83,4 @@
     );
   }
 }
+
Index: lib/Widgets/GeneralWidgets/NutriSaludBtBar.dart
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/lib/Widgets/GeneralWidgets/NutriSaludBtBar.dart b/lib/Widgets/GeneralWidgets/NutriSaludBtBar.dart
--- a/lib/Widgets/GeneralWidgets/NutriSaludBtBar.dart	(revision ac9a8f77977ddd52e5e9c6c6c1e1f1a7b620cf65)
+++ b/lib/Widgets/GeneralWidgets/NutriSaludBtBar.dart	(revision d38b3354ef0aa72a98cad2a42ced7d39f84752db)
@@ -35,7 +35,7 @@
         children: const [
           MainPage(),
           Nutricionists(),
-          RecomendedFood(),
+          RecommendedFood(),
           Community(),
         ],
       ),
